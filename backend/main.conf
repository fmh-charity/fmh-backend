limit_req_zone $binary_remote_addr zone=common:10m rate=2r/s;


server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name vhospice.org www.vhospice.org;

	root /opt/front;
	index index.html;

	# SSL
	ssl_certificate /etc/letsencrypt/live/vhospice.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vhospice.org/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	client_max_body_size 5M;

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;

	proxy_redirect     off;
	proxy_set_header   Host              $host;
	proxy_set_header   X-Real-IP         $remote_addr;
	proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Proto $scheme;

	location /api/ {
	    limit_req zone=common burst=5;

	    if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
             }
         #if ($request_method = 'POST') {
         #   add_header 'Access-Control-Allow-Origin' '*' always;
         #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
         #   add_header 'Access-Control-Allow-Headers' 'DNT,authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
         #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         #}
         #if ($request_method = 'GET') {
         #   add_header 'Access-Control-Allow-Origin' '*' always;
         #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
         #   add_header 'Access-Control-Allow-Headers' 'DNT,authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
         #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         #}
         #if ($request_method = 'PUT') {
         #   add_header 'Access-Control-Allow-Origin' '*' always;
         #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
         #   add_header 'Access-Control-Allow-Headers' 'DNT,authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
         #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         #}
         #if ($request_method = 'DELETE') {
         #   add_header 'Access-Control-Allow-Origin' '*' always;
         #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
         #   add_header 'Access-Control-Allow-Headers' 'DNT,authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
         #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         #}

		proxy_pass http://backend:8080/;
	}

	location /webjars {
            proxy_pass         http://backend:8080; #change to your port
    }

	location /fmh/swagger-ui/ {
	    limit_req zone=common burst=5;
		proxy_redirect     off;
		proxy_pass http://backend:8080/fmh/swagger-ui/;
	}

	location / {
	    try_files $uri /index.html;
	}
	
	location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}


# HTTP redirect
server {
	listen 80;
	server_name vhospice.org www.vhospice.org;

	# Redirect all HTTP requests to HTTPS
	location / {
		return 301 https://$server_name$request_uri;
	}
}
